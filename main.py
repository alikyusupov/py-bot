# –ò–º–ø–æ—Ä—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –±–∏–±–ª–∏–æ—Ç–µ–∫
import telebot
from telebot import types
import requests
import json

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –±–æ—Ç–∞
bot = telebot.TeleBot('6803479333:AAH-q47fG_ICMIKEfmAn-mtZZ2oi6al9mr0')

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_state = {}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±—â–∏—Ö –¥–∞–Ω–Ω—ã—Ö
def get_general_data():
    try:
        response = requests.get('https://math-ege.sdamgia.ru/newapi/general')
        response.raise_for_status()
        parsed_data = json.loads(response.content)
        return parsed_data
    except Exception as e:
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö
        bot.send_message(chat_id, f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
        return None

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def welcome(message):
    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_name = message.from_user.first_name

    # –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç —Å –∏–º–µ–Ω–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∫–Ω–æ–ø–∫–∞ "–ù–∞—á–∞—Ç—å"
    welcome_text = f"""
    üåü –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {user_name}! üåü

–ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–º—É –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏—é –≤ –º–∏—Ä –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –ï–ì–≠! –Ø - –≤–∞—à –≤–µ—Ä–Ω—ã–π —Å–ø—É—Ç–Ω–∏–∫, –±–æ—Ç, –≥–æ—Ç–æ–≤—ã–π –ø–æ–º–æ—á—å –≤–∞–º –≤ —Ä–µ—à–µ–Ω–∏–∏ –∑–∞–¥–∞—á –∏ –æ—Å–≤–æ–µ–Ω–∏–∏ —Å–∞–º—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö —Ç–µ–º.

üöÄ –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å", —á—Ç–æ–±—ã –≤–∑–ª–µ—Ç–µ—Ç—å –≤ –∞—Ç–º–æ—Å—Ñ–µ—Ä—É –∑–Ω–∞–Ω–∏–π –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ —Å–≤–æ–∏—Ö –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è—Ö! –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª, –∫–æ—Ç–æ—Ä—ã–π –≤–∞—Å –ø—Ä–∏–≤–ª–µ–∫–∞–µ—Ç, –∏ –¥–∞–π—Ç–µ —Å—Ç–∞—Ä—Ç —Å–≤–æ–µ–º—É —É—á–µ–±–Ω–æ–º—É –ø–æ–ª–µ—Ç—É –∫ —É—Å–ø–µ—Ö—É.

üéì –ù–µ –ø—Ä–æ—Å—Ç–æ –±–æ—Ç, –∞ –≤–∞—à –ª–∏—á–Ω—ã–π –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫ –≤ –º–∏—Ä–µ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏! –ü—Ä–∏–≥–æ—Ç–æ–≤—å—Ç–µ—Å—å –∫ –∑–∞—Ö–≤–∞—Ç—ã–≤–∞—é—â–µ–º—É –æ–±—É—á–µ–Ω–∏—é –∏ —É–≤–µ—Ä–µ–Ω–Ω–æ–º—É —Å–æ–≤–ª–∞–¥–µ–Ω–∏—é —Å –∑–∞–¥–∞–Ω–∏—è–º–∏ –ï–ì–≠. –î–∞–≤–∞–π—Ç–µ –Ω–∞—á–Ω–µ–º —ç—Ç–æ—Ç —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –≤–º–µ—Å—Ç–µ!

üî• –ì–æ—Ç–æ–≤—ã –∫ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—è–º? –¢–æ–≥–¥–∞ –≤–ø–µ—Ä–µ–¥, –Ω–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å" –∏ –¥–∞–π—Ç–µ —Å—Ç–∞—Ä—Ç –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–æ–º—É –≤–æ–ª—à–µ–±—Å—Ç–≤—É! üöÄ

    """

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å"
    layout = types.InlineKeyboardMarkup(
        [
            [
                types.InlineKeyboardButton('–ù–∞—á–∞—Ç—å', callback_data='start'),
            ],
        ]
    )

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–ù–∞—á–∞—Ç—å"
    bot.send_message(message.chat.id, welcome_text, reply_markup=layout)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è inline-–∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda callback: True)
def callback_handler(callback):
    chat_id = callback.message.chat.id
    
    try:
        # –ü–æ–ø—ã—Ç–∫–∞ –∏–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        bot.edit_message_text(chat_id=chat_id, message_id=callback.message.message_id - 1, text="–ù–æ–≤—ã–π —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –∏–ª–∏ —á—Ç–æ-—Ç–æ –µ—â–µ")
    except Exception as e:
        pass

    if callback.data == 'start':
        # ... (–∫–æ–¥ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–ù–∞—á–∞—Ç—å")
        layout = types.InlineKeyboardMarkup(
            [
                [
                    types.InlineKeyboardButton('–¢–µ–º—ã', callback_data='themes'),
                ],
                [
                    types.InlineKeyboardButton('–°–ø—Ä–∞–≤–∫–∞', callback_data='button2'),
                ],
                [
                    types.InlineKeyboardButton('–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫', callback_data='reference'),
                ],
            ]
        )
        user_state[chat_id] = 'start'
        bot.edit_message_text(chat_id=chat_id, message_id=callback.message.message_id, text='<b>–ú–µ–Ω—é –ë–æ—Ç–∞</b>', reply_markup=layout, parse_mode='html')
    elif callback.data == 'themes':
        # ... (–∫–æ–¥ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–¢–µ–º—ã")
        layout = types.InlineKeyboardMarkup()
        themes_list = [
            '1.–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è', '2.–í–µ–∫—Ç–æ—Ä—ã', '3.–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è', '4.–ù–∞—á–∞–ª–∞ —Ç–µ–æ—Ä–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π', '5.–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Å–ª–æ–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π', 
            '6.–ü—Ä–æ—Å—Ç–µ–π—à–∏–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è', '7.–í—ã—á–∏—Å–ª–µ–Ω–∏—è –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è', '8.–ü—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è –∏ –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–∞—è', '9.–ü—Ä–∏–∫–ª–∞–¥–Ω—ã–µ –∑–∞–¥–∞—á–∏', 
            '10.–¢–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏', '11.–ì—Ä–∞—Ñ–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π', '12.–ú–∞–∫—Å –∏ –ú–∏–Ω –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π', '13.–£—Ä–∞–≤–Ω–µ–Ω–∏—è', '14.–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞', 
            '15.–ù–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞', '16.–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '17.–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞', '18.–ó–∞–¥–∞—á–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º', '19.–ß–∏—Å–ª–∞ –∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞'
            # ... (–¥–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã)
        ]
        for theme in themes_list:
            layout.add(types.InlineKeyboardButton(theme, callback_data=f'theme_{theme.lower().replace(" ", "_")}'))
        layout.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='back'))
        user_state[chat_id] = 'themes'
        bot.edit_message_text(chat_id=chat_id, message_id=callback.message.message_id, text='<b>–¢–µ–º—ã</b>', reply_markup=layout, parse_mode='html')
    elif callback.data == 'button2':
        # ... (–∫–æ–¥ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–°–ø—Ä–∞–≤–∫–∞")
        instruction_text = f"""<b>–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –±–æ—Ç–∞:</b>
        1. <i>–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞:</i> –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–ü—É—Å–∫" –∏–ª–∏ –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É, –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–Ω—É—é –±–æ—Ç–æ–º, —á—Ç–æ–±—ã –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å –µ–≥–æ.
        2. <i>–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –∫–æ–º–∞–Ω–¥–∞–º–∏:</i> –ë–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –±–æ—Ç–æ–≤ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã. –ù–∞–ø—Ä–∏–º–µ—Ä, "/help", "/info" –∏–ª–∏ "/commands" –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥."""
        layout = types.InlineKeyboardMarkup(
            [
                [
                    types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='back')
                ],
            ]
        )
        user_state[chat_id] = 'button2'
        bot.edit_message_text(chat_id=chat_id, message_id=callback.message.message_id, text=instruction_text, reply_markup=layout, parse_mode='html')
    elif callback.data == 'reference':
        # ... (–∫–æ–¥ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫")
        layout = types.InlineKeyboardMarkup()
        reference_themes = [
            '1.–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è', '2.–í–µ–∫—Ç–æ—Ä—ã', '3.–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è', '4.–ù–∞—á–∞–ª–∞ —Ç–µ–æ—Ä–∏–∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π', '5.–í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–∏ —Å–ª–æ–∂–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π', 
            '6.–ü—Ä–æ—Å—Ç–µ–π—à–∏–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è', '7.–í—ã—á–∏—Å–ª–µ–Ω–∏—è –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è', '8.–ü—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è –∏ –ø–µ—Ä–≤–æ–æ–±—Ä–∞–∑–Ω–∞—è', '9.–ü—Ä–∏–∫–ª–∞–¥–Ω—ã–µ –∑–∞–¥–∞—á–∏', 
            '10.–¢–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏', '11.–ì—Ä–∞—Ñ–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π', '12.–ú–∞–∫—Å –∏ –ú–∏–Ω –∑–Ω–∞—á–µ–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π', '13.–£—Ä–∞–≤–Ω–µ–Ω–∏—è', '14.–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞', 
            '15.–ù–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞', '16.–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞', '17.–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è –∑–∞–¥–∞—á–∞', '18.–ó–∞–¥–∞—á–∞ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º', '19.–ß–∏—Å–ª–∞ –∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞'
            # ... (–¥–æ–±–∞–≤—å—Ç–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Ç–µ–º—ã)
        ]
        for theme in reference_themes:
            layout.add(types.InlineKeyboardButton(theme, callback_data=f'reference_{theme.lower().replace(" ", "_")}'))
        layout.add(types.InlineKeyboardButton('–ù–∞–∑–∞–¥', callback_data='back'))
        user_state[chat_id] = 'reference'
        bot.edit_message_text(chat_id=chat_id, message_id=callback.message.message_id, text='<b>–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫:</b>', reply_markup=layout, parse_mode='html')
    elif callback.data == 'back':
        # ... (–∫–æ–¥ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã "–ù–∞–∑–∞–¥")
        if chat_id in user_state and user_state[chat_id] == 'themes':
            layout = types.InlineKeyboardMarkup(
                [
                [
                    types.InlineKeyboardButton('–¢–µ–º—ã', callback_data='themes'),
                ],
                [
                    types.InlineKeyboardButton('–°–ø—Ä–∞–≤–∫–∞', callback_data='button2'),
                ],
                [
                    types.InlineKeyboardButton('–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫', callback_data='reference'),
                ],
            ]
            )
            user_state[chat_id] = 'start'
            bot.edit_message_text(chat_id=chat_id, message_id=callback.message.message_id, text='<b>–ú–µ–Ω—é –ë–æ—Ç–∞</b>', reply_markup=layout, parse_mode='html')
        elif chat_id in user_state and user_state[chat_id] == 'button2':
            layout = types.InlineKeyboardMarkup(
                [
                [
                    types.InlineKeyboardButton('–¢–µ–º—ã', callback_data='themes'),
                ],
                [
                    types.InlineKeyboardButton('–°–ø—Ä–∞–≤–∫–∞', callback_data='button2'),
                ],
                [
                    types.InlineKeyboardButton('–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫', callback_data='reference'),
                ],
            ]
            )
            user_state[chat_id] = 'start'
            bot.edit_message_text(chat_id=chat_id, message_id=callback.message.message_id, text='<b>–ú–µ–Ω—é –ë–æ—Ç–∞</b>', reply_markup=layout, parse_mode='html')
        elif chat_id in user_state and user_state[chat_id] == 'reference':
            layout = types.InlineKeyboardMarkup(
                [
                [
                    types.InlineKeyboardButton('–¢–µ–º—ã', callback_data='themes'),
                ],
                [
                    types.InlineKeyboardButton('–°–ø—Ä–∞–≤–∫–∞', callback_data='button2'),
                ],
                [
                    types.InlineKeyboardButton('–°–ø—Ä–∞–≤–æ—á–Ω–∏–∫', callback_data='reference'),
                ],
            ]
            )
            user_state[chat_id] = 'start'
            bot.edit_message_text(chat_id=chat_id, message_id=callback.message.message_id, text='<b>–ú–µ–Ω—é –ë–æ—Ç–∞</b>', reply_markup=layout, parse_mode='html')
    else:
        # ... (–∫–æ–¥ –¥–ª—è –¥—Ä—É–≥–∏—Ö inline-–∫–Ω–æ–ø–æ–∫)
        url = f'https://math-ege.sdamgia.ru/test?theme={callback.data}'
        bot.send_message(chat_id, f'<b>{callback.data}</b>', parse_mode='html')
        bot.send_message(chat_id, f'<a href="{url}">Link to the site</a>', parse_mode='html', disable_web_page_preview=True)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ –æ–∂–∏–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.polling(none_stop=True)
